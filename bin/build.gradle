task args
args.map = [:]

tasks.addRule("Pattern: <property>=<value>: Passes arguments to the scripts") { String taskName ->
    def match = taskName =~ /(.*?)=(.*?$)/
    if(match){
        args.map[match[0][1]] = match[0][2]
        task(taskName) << {
        }
    }
}


task help << {
    println ("""\
Welcome to Wasabi

To get started run: gradle -q server dir={directory} appName={appName}

where {directory} hosts your app. Your app will be called {appName} name
e.g.: gradle -q server dir=~/home/project/myAppfolder appName=myApp""")
}

task setup(dependsOn: args) << {
    if (!args.map.dir || !args.map.appName) {
        throw new GradleException('You need to specify a directory and appName')
    } else {
        def directory = new File(args.map.dir)
        directory.mkdirs()
        println('Creating directory $args.map.dir ...')
        def sourcedir = new File(args.map.dir + '/src/main/kotlin')
        sourcedir.mkdirs()
        println('Creating src directory ...')
        def testdir = new File(args.map.dir + '/src/test/kotlin')
        testdir.mkdirs()
        println('Creating test directory ...')
    }
}

task createGradle(dependsOn: setup) << {
        println('Creating gradle build file ...')
        def gradleFile = new File(args.map.dir+'/build.gradle')
        gradleFile.append("""\
buildscript {
    project.ext.kotlin_version = '0.6.69'
    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:\$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = '${args.map.appName}'

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "http://repository.jetbrains.com/all"
    }
}

dependencies {
    compile "org.wasabi:wasabi:0.1-SNAPSHOT"
    compile "org.jetbrains.kotlin:kotlin-stdlib:\$kotlin_version"

}

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}
""")
}



task server(dependsOn: createGradle) << {
        println('Creating server ...')
        def serverFile = new File(args.map.dir+'/src/main/kotlin/server.kt')
        serverFile.append("""\
package ${args.map.appName}

import org.wasabi.app.AppServer

fun main(args: Array<String>) {

    val server = AppServer()

    // insert routes here
    server.get("/", { response.send ("Hello Wasabi")})

    server.start()

}
""")
        println('Done!')

}
